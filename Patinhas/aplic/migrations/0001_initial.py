# Generated by Django 4.2.16 on 2024-11-15 18:29

import aplic.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(blank=True, max_length=8, null=True)),
                ('telefone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Telefone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('peso', models.FloatField(blank=True, max_length='5', null=True, verbose_name='peso')),
                ('data_nascimento', models.DateField(blank=True, max_length=8, null=True)),
                ('sexo', models.CharField(choices=[('F', 'Femêa'), ('M', 'Macho')], max_length=1, verbose_name='sexo')),
                ('personalidade', models.CharField()),
                ('imagem', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to=aplic.models.get_file_path, variations={'thumb': {'crop': True, 'height': 260, 'width': 420}}, verbose_name='Imagem')),
            ],
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(blank=True, max_length=50, null=True, verbose_name='Logradouro')),
                ('numero_logradouro', models.IntegerField(blank=True, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=30, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=20, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado')),
                ('cep', models.IntegerField(blank=True, null=True, verbose_name='CEP')),
            ],
            options={
                'verbose_name_plural': 'Endereços',
            },
        ),
        migrations.CreateModel(
            name='Raca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_raca', models.CharField(blank=True, max_length=50, verbose_name='Raça')),
                ('descricao_raca', models.TextField(blank=True, max_length=50, verbose_name='Descrição')),
            ],
            options={
                'verbose_name_plural': 'Raças',
            },
        ),
        migrations.CreateModel(
            name='Tipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_tipo', models.CharField(max_length=50, verbose_name='Tipo')),
                ('descricao_tipo', models.TextField(verbose_name='Descrição')),
            ],
            options={
                'verbose_name_plural': 'Tipos',
            },
        ),
        migrations.CreateModel(
            name='Cachorro',
            fields=[
                ('animal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aplic.animal')),
                ('porte', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Cachorros',
            },
            bases=('aplic.animal',),
        ),
        migrations.CreateModel(
            name='Gato',
            fields=[
                ('animal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aplic.animal')),
            ],
            options={
                'verbose_name_plural': 'Gatos',
            },
            bases=('aplic.animal',),
        ),
        migrations.CreateModel(
            name='Veterinario',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('crmv', models.CharField(blank=True, max_length=10, null=True, verbose_name='CRMV')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('aplic.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Voluntario',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Voluntários',
            },
            bases=('aplic.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(blank=True, max_length=8, null=True, verbose_name='Data Início')),
                ('data_fim', models.DateField(blank=True, max_length=8, null=True, verbose_name='Data Fim')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição do Evento')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplic.tipo')),
            ],
            options={
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.AddField(
            model_name='animal',
            name='raca',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aplic.raca'),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('endereco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='aplic.endereco')),
            ],
            options={
                'verbose_name_plural': 'Tutores',
            },
            bases=('aplic.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_clinica', models.CharField(blank=True, max_length=15, null=True, verbose_name='Clínica')),
                ('veterinario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aplic.veterinario')),
            ],
            options={
                'verbose_name_plural': 'Clínicas',
            },
        ),
    ]
